{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\IT354 Veb Sistemi1\\\\crypto-wallet-app\\\\src\\\\pages\\\\DashboardPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useAuth } from '../context/AuthContext';\nimport WalletOverview from '../components/WalletOverview';\nimport TransactionList from '../components/TransactionList';\nimport PortfolioChart from '../components/PortfolioChart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DashboardPage = () => {\n  _s();\n  const {\n    userId\n  } = useAuth();\n  const [wallet, setWallet] = useState(null);\n  const [transactions, setTransactions] = useState([]);\n  const [allCryptos, setAllCryptos] = useState([]); // Za cene i simbole\n  const [loading, setLoading] = useState(true);\n  const [sendAmount, setSendAmount] = useState('');\n  const [sendCurrency, setSendCurrency] = useState('BTC');\n  const [receiverUsername, setReceiverUsername] = useState('');\n  const [sendError, setSendError] = useState('');\n  const [sendSuccess, setSendSuccess] = useState('');\n  useEffect(() => {\n    const fetchData = async () => {\n      if (!userId) {\n        setLoading(false); // Prestani sa učitavanjem ako nema korisnika\n        return;\n      }\n      setLoading(true);\n      try {\n        // Učitaj novčanik korisnika\n        const walletRes = await axios.get(`http://localhost:5000/wallets?userId=${userId}`);\n        if (walletRes.data.length > 0) {\n          setWallet(walletRes.data[0]);\n        } else {\n          // Ovo bi trebalo da se desi pri registraciji, ali kao fallback\n          const newWallet = {\n            userId,\n            balances: {}\n          };\n          const createdWallet = await axios.post('http://localhost:5000/wallets', newWallet);\n          setWallet(createdWallet.data);\n        }\n\n        // Učitaj transakcije za korisnika (kao pošiljaoca ili primaoca)\n        const txRes = await axios.get(`http://localhost:5000/transactions?senderId=${userId}`);\n        const receivedTxRes = await axios.get(`http://localhost:5000/transactions?receiverId=${userId}`);\n\n        // Sortiraj sve transakcije po datumu (najnovije prvo)\n        const allUserTxs = [...txRes.data, ...receivedTxRes.data].sort((a, b) => new Date(b.date) - new Date(a.date));\n        setTransactions(allUserTxs);\n\n        // Učitaj sve podržane kriptovalute\n        const cryptoRes = await axios.get('http://localhost:5000/cryptos');\n        setAllCryptos(cryptoRes.data);\n\n        // Postavi default valutu za slanje ako korisnik ima neke balanse\n        if (walletRes.data.length > 0 && Object.keys(walletRes.data[0].balances).length > 0) {\n          setSendCurrency(Object.keys(walletRes.data[0].balances)[0]);\n        }\n      } catch (error) {\n        console.error(\"Greška pri učitavanju podataka:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [userId]);\n  const handleSendCrypto = async e => {\n    e.preventDefault();\n    setSendError('');\n    setSendSuccess('');\n    const amount = parseFloat(sendAmount);\n    if (isNaN(amount) || amount <= 0) {\n      setSendError('Unesite validan iznos.');\n      return;\n    }\n    if (!wallet || !wallet.balances[sendCurrency] || wallet.balances[sendCurrency] < amount) {\n      setSendError(`Nedovoljno sredstava za ${sendCurrency}. Trenutno imate: ${(wallet === null || wallet === void 0 ? void 0 : wallet.balances[sendCurrency]) || 0} ${sendCurrency}`);\n      return;\n    }\n\n    // Zabraniti slanje samom sebi\n    const senderUsername = (await axios.get(`http://localhost:5000/users/${userId}`)).data.username;\n    if (receiverUsername === senderUsername) {\n      setSendError('Ne možete slati kriptovalute samom sebi.');\n      return;\n    }\n    try {\n      // Pronađi primaoca po username-u\n      const receiverRes = await axios.get(`http://localhost:5000/users?username=${receiverUsername}`);\n      if (receiverRes.data.length === 0) {\n        setSendError('Primalac sa unetim korisničkim imenom ne postoji.');\n        return;\n      }\n      const receiverUser = receiverRes.data[0];\n      const receiverUserId = receiverUser.id;\n\n      // Pronađi novčanik primaoca\n      let receiverWalletRes = await axios.get(`http://localhost:5000/wallets?userId=${receiverUserId}`);\n      let receiverWallet = receiverWalletRes.data[0];\n      if (!receiverWallet) {\n        // Kreiraj novčanik za primaoca ako ne postoji\n        receiverWallet = {\n          userId: receiverUserId,\n          balances: {}\n        };\n        receiverWallet = (await axios.post('http://localhost:5000/wallets', receiverWallet)).data;\n      }\n\n      // Ažuriraj stanje pošiljaoca\n      const updatedSenderBalances = {\n        ...wallet.balances\n      };\n      updatedSenderBalances[sendCurrency] -= amount;\n\n      // Ažuriraj stanje primaoca\n      const updatedReceiverBalances = {\n        ...receiverWallet.balances\n      };\n      updatedReceiverBalances[sendCurrency] = (updatedReceiverBalances[sendCurrency] || 0) + amount;\n\n      // Transakcija pošiljaoca (PATCH jer menjamo postojeći novčanik)\n      await axios.patch(`http://localhost:5000/wallets/${wallet.id}`, {\n        balances: updatedSenderBalances\n      });\n\n      // Transakcija primaoca (PATCH jer menjamo postojeći novčanik)\n      await axios.patch(`http://localhost:5000/wallets/${receiverWallet.id}`, {\n        balances: updatedReceiverBalances\n      });\n\n      // Kreiraj transakciju\n      const newTransaction = {\n        id: `tx${Date.now()}`,\n        // Jedinstveni ID za transakciju\n        senderId: userId,\n        receiverId: receiverUserId,\n        amount: amount,\n        currency: sendCurrency,\n        date: new Date().toISOString(),\n        type: 'send'\n      };\n      await axios.post('http://localhost:5000/transactions', newTransaction);\n      setSendSuccess('Kriptovaluta uspešno poslata!');\n      setSendAmount('');\n      setReceiverUsername('');\n\n      // Ažuriraj lokalno stanje novčanika\n      setWallet(prevWallet => ({\n        ...prevWallet,\n        balances: updatedSenderBalances\n      }));\n\n      // Ponovo dohvati transakcije za svež prikaz\n      const txRes = await axios.get(`http://localhost:5000/transactions?senderId=${userId}`);\n      const receivedTxRes = await axios.get(`http://localhost:5000/transactions?receiverId=${userId}`);\n      const allUserTxs = [...txRes.data, ...receivedTxRes.data].sort((a, b) => new Date(b.date) - new Date(a.date));\n      setTransactions(allUserTxs);\n    } catch (error) {\n      console.error(\"Greška pri slanju kriptovalute:\", error);\n      setSendError('Došlo je do greške prilikom slanja. Proverite da li primalac postoji i imate li dovoljno sredstava.');\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center text-lg mt-8\",\n      children: \"U\\u010Ditavanje...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 16\n    }, this);\n  }\n\n  // Proveri da li je wallet null ili prazan nakon učitavanja\n  if (!wallet || Object.keys(wallet.balances).length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"py-8 text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-4xl font-bold text-gray-900 mb-8\",\n        children: \"Moj Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-xl text-gray-700\",\n        children: \"Va\\u0161 nov\\u010Danik je trenutno prazan. Ne mo\\u017Eete slati kriptovalute dok ne dobijete neku.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"py-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-4xl font-bold text-gray-900 mb-8 text-center\",\n      children: \"Moj Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-2 gap-8 mb-8\",\n      children: [wallet && /*#__PURE__*/_jsxDEV(WalletOverview, {\n        wallet: wallet,\n        allCryptos: allCryptos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 28\n      }, this), wallet && /*#__PURE__*/_jsxDEV(PortfolioChart, {\n        wallet: wallet,\n        allCryptos: allCryptos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-2 gap-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded-lg shadow-xl\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-2xl font-semibold mb-4\",\n          children: \"Po\\u0161alji Kriptovalutu\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSendCrypto,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-gray-700 text-sm font-bold mb-2\",\n              htmlFor: \"receiverUsername\",\n              children: \"Korisni\\u010Dko ime primaoca:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"receiverUsername\",\n              className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n              value: receiverUsername,\n              onChange: e => setReceiverUsername(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-gray-700 text-sm font-bold mb-2\",\n              htmlFor: \"sendAmount\",\n              children: \"Iznos:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              id: \"sendAmount\",\n              className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n              value: sendAmount,\n              onChange: e => setSendAmount(e.target.value),\n              step: \"any\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-gray-700 text-sm font-bold mb-2\",\n              htmlFor: \"sendCurrency\",\n              children: \"Kriptovaluta:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"sendCurrency\",\n              className: \"shadow border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n              value: sendCurrency,\n              onChange: e => setSendCurrency(e.target.value),\n              children: Object.keys((wallet === null || wallet === void 0 ? void 0 : wallet.balances) || {}).filter(symbol => wallet.balances[symbol] > 0) // Samo valute sa balansom > 0\n              .map(symbol => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: symbol,\n                children: symbol\n              }, symbol, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 25\n          }, this), sendError && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-red-500 text-xs italic mb-4\",\n            children: sendError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 39\n          }, this), sendSuccess && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-green-500 text-xs italic mb-4\",\n            children: sendSuccess\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"bg-indigo-600 hover:bg-indigo-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline transition duration-300\",\n            children: \"Po\\u0161alji\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TransactionList, {\n        transactions: transactions,\n        userId: userId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 9\n  }, this);\n};\n_s(DashboardPage, \"74749Vd3HNCCLpgZTivRoww2gqY=\", false, function () {\n  return [useAuth];\n});\n_c = DashboardPage;\nexport default DashboardPage;\nvar _c;\n$RefreshReg$(_c, \"DashboardPage\");","map":{"version":3,"names":["React","useEffect","useState","axios","useAuth","WalletOverview","TransactionList","PortfolioChart","jsxDEV","_jsxDEV","DashboardPage","_s","userId","wallet","setWallet","transactions","setTransactions","allCryptos","setAllCryptos","loading","setLoading","sendAmount","setSendAmount","sendCurrency","setSendCurrency","receiverUsername","setReceiverUsername","sendError","setSendError","sendSuccess","setSendSuccess","fetchData","walletRes","get","data","length","newWallet","balances","createdWallet","post","txRes","receivedTxRes","allUserTxs","sort","a","b","Date","date","cryptoRes","Object","keys","error","console","handleSendCrypto","e","preventDefault","amount","parseFloat","isNaN","senderUsername","username","receiverRes","receiverUser","receiverUserId","id","receiverWalletRes","receiverWallet","updatedSenderBalances","updatedReceiverBalances","patch","newTransaction","now","senderId","receiverId","currency","toISOString","type","prevWallet","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","value","onChange","target","required","step","filter","symbol","map","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/IT354 Veb Sistemi1/crypto-wallet-app/src/pages/DashboardPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useAuth } from '../context/AuthContext';\r\nimport WalletOverview from '../components/WalletOverview';\r\nimport TransactionList from '../components/TransactionList';\r\nimport PortfolioChart from '../components/PortfolioChart';\r\n\r\nconst DashboardPage = () => {\r\n    const { userId } = useAuth();\r\n    const [wallet, setWallet] = useState(null);\r\n    const [transactions, setTransactions] = useState([]);\r\n    const [allCryptos, setAllCryptos] = useState([]); // Za cene i simbole\r\n    const [loading, setLoading] = useState(true);\r\n    const [sendAmount, setSendAmount] = useState('');\r\n    const [sendCurrency, setSendCurrency] = useState('BTC');\r\n    const [receiverUsername, setReceiverUsername] = useState('');\r\n    const [sendError, setSendError] = useState('');\r\n    const [sendSuccess, setSendSuccess] = useState('');\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            if (!userId) {\r\n                setLoading(false); // Prestani sa učitavanjem ako nema korisnika\r\n                return;\r\n            }\r\n\r\n            setLoading(true);\r\n            try {\r\n                // Učitaj novčanik korisnika\r\n                const walletRes = await axios.get(`http://localhost:5000/wallets?userId=${userId}`);\r\n                if (walletRes.data.length > 0) {\r\n                    setWallet(walletRes.data[0]);\r\n                } else {\r\n                    // Ovo bi trebalo da se desi pri registraciji, ali kao fallback\r\n                    const newWallet = { userId, balances: {} };\r\n                    const createdWallet = await axios.post('http://localhost:5000/wallets', newWallet);\r\n                    setWallet(createdWallet.data);\r\n                }\r\n\r\n                // Učitaj transakcije za korisnika (kao pošiljaoca ili primaoca)\r\n                const txRes = await axios.get(`http://localhost:5000/transactions?senderId=${userId}`);\r\n                const receivedTxRes = await axios.get(`http://localhost:5000/transactions?receiverId=${userId}`);\r\n\r\n                // Sortiraj sve transakcije po datumu (najnovije prvo)\r\n                const allUserTxs = [...txRes.data, ...receivedTxRes.data].sort((a, b) => new Date(b.date) - new Date(a.date));\r\n                setTransactions(allUserTxs);\r\n\r\n                // Učitaj sve podržane kriptovalute\r\n                const cryptoRes = await axios.get('http://localhost:5000/cryptos');\r\n                setAllCryptos(cryptoRes.data);\r\n\r\n                // Postavi default valutu za slanje ako korisnik ima neke balanse\r\n                if (walletRes.data.length > 0 && Object.keys(walletRes.data[0].balances).length > 0) {\r\n                    setSendCurrency(Object.keys(walletRes.data[0].balances)[0]);\r\n                }\r\n\r\n            } catch (error) {\r\n                console.error(\"Greška pri učitavanju podataka:\", error);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, [userId]);\r\n\r\n    const handleSendCrypto = async (e) => {\r\n        e.preventDefault();\r\n        setSendError('');\r\n        setSendSuccess('');\r\n\r\n        const amount = parseFloat(sendAmount);\r\n        if (isNaN(amount) || amount <= 0) {\r\n            setSendError('Unesite validan iznos.');\r\n            return;\r\n        }\r\n\r\n        if (!wallet || !wallet.balances[sendCurrency] || wallet.balances[sendCurrency] < amount) {\r\n            setSendError(`Nedovoljno sredstava za ${sendCurrency}. Trenutno imate: ${wallet?.balances[sendCurrency] || 0} ${sendCurrency}`);\r\n            return;\r\n        }\r\n\r\n        // Zabraniti slanje samom sebi\r\n        const senderUsername = (await axios.get(`http://localhost:5000/users/${userId}`)).data.username;\r\n        if (receiverUsername === senderUsername) {\r\n            setSendError('Ne možete slati kriptovalute samom sebi.');\r\n            return;\r\n        }\r\n\r\n\r\n        try {\r\n            // Pronađi primaoca po username-u\r\n            const receiverRes = await axios.get(`http://localhost:5000/users?username=${receiverUsername}`);\r\n            if (receiverRes.data.length === 0) {\r\n                setSendError('Primalac sa unetim korisničkim imenom ne postoji.');\r\n                return;\r\n            }\r\n            const receiverUser = receiverRes.data[0];\r\n            const receiverUserId = receiverUser.id;\r\n\r\n            // Pronađi novčanik primaoca\r\n            let receiverWalletRes = await axios.get(`http://localhost:5000/wallets?userId=${receiverUserId}`);\r\n            let receiverWallet = receiverWalletRes.data[0];\r\n\r\n            if (!receiverWallet) {\r\n                // Kreiraj novčanik za primaoca ako ne postoji\r\n                receiverWallet = { userId: receiverUserId, balances: {} };\r\n                receiverWallet = (await axios.post('http://localhost:5000/wallets', receiverWallet)).data;\r\n            }\r\n\r\n            // Ažuriraj stanje pošiljaoca\r\n            const updatedSenderBalances = { ...wallet.balances };\r\n            updatedSenderBalances[sendCurrency] -= amount;\r\n\r\n            // Ažuriraj stanje primaoca\r\n            const updatedReceiverBalances = { ...receiverWallet.balances };\r\n            updatedReceiverBalances[sendCurrency] = (updatedReceiverBalances[sendCurrency] || 0) + amount;\r\n\r\n            // Transakcija pošiljaoca (PATCH jer menjamo postojeći novčanik)\r\n            await axios.patch(`http://localhost:5000/wallets/${wallet.id}`, { balances: updatedSenderBalances });\r\n\r\n            // Transakcija primaoca (PATCH jer menjamo postojeći novčanik)\r\n            await axios.patch(`http://localhost:5000/wallets/${receiverWallet.id}`, { balances: updatedReceiverBalances });\r\n\r\n            // Kreiraj transakciju\r\n            const newTransaction = {\r\n                id: `tx${Date.now()}`, // Jedinstveni ID za transakciju\r\n                senderId: userId,\r\n                receiverId: receiverUserId,\r\n                amount: amount,\r\n                currency: sendCurrency,\r\n                date: new Date().toISOString(),\r\n                type: 'send'\r\n            };\r\n            await axios.post('http://localhost:5000/transactions', newTransaction);\r\n\r\n            setSendSuccess('Kriptovaluta uspešno poslata!');\r\n            setSendAmount('');\r\n            setReceiverUsername('');\r\n\r\n            // Ažuriraj lokalno stanje novčanika\r\n            setWallet(prevWallet => ({ ...prevWallet, balances: updatedSenderBalances }));\r\n\r\n            // Ponovo dohvati transakcije za svež prikaz\r\n            const txRes = await axios.get(`http://localhost:5000/transactions?senderId=${userId}`);\r\n            const receivedTxRes = await axios.get(`http://localhost:5000/transactions?receiverId=${userId}`);\r\n            const allUserTxs = [...txRes.data, ...receivedTxRes.data].sort((a, b) => new Date(b.date) - new Date(a.date));\r\n            setTransactions(allUserTxs);\r\n\r\n        } catch (error) {\r\n            console.error(\"Greška pri slanju kriptovalute:\", error);\r\n            setSendError('Došlo je do greške prilikom slanja. Proverite da li primalac postoji i imate li dovoljno sredstava.');\r\n        }\r\n    };\r\n\r\n    if (loading) {\r\n        return <div className=\"text-center text-lg mt-8\">Učitavanje...</div>;\r\n    }\r\n\r\n    // Proveri da li je wallet null ili prazan nakon učitavanja\r\n    if (!wallet || Object.keys(wallet.balances).length === 0) {\r\n        return (\r\n            <div className=\"py-8 text-center\">\r\n                <h1 className=\"text-4xl font-bold text-gray-900 mb-8\">Moj Dashboard</h1>\r\n                <p className=\"text-xl text-gray-700\">Vaš novčanik je trenutno prazan. Ne možete slati kriptovalute dok ne dobijete neku.</p>\r\n                {/* Uklonjen je ceo problematični div blok za simulaciju primanja sredstava */}\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"py-8\">\r\n            <h1 className=\"text-4xl font-bold text-gray-900 mb-8 text-center\">Moj Dashboard</h1>\r\n\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8 mb-8\">\r\n                {wallet && <WalletOverview wallet={wallet} allCryptos={allCryptos} />}\r\n                {wallet && <PortfolioChart wallet={wallet} allCryptos={allCryptos} />}\r\n            </div>\r\n\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\r\n                {/* Forma za slanje kriptovaluta */}\r\n                <div className=\"bg-white p-6 rounded-lg shadow-xl\">\r\n                    <h3 className=\"text-2xl font-semibold mb-4\">Pošalji Kriptovalutu</h3>\r\n                    <form onSubmit={handleSendCrypto}>\r\n                        <div className=\"mb-4\">\r\n                            <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"receiverUsername\">\r\n                                Korisničko ime primaoca:\r\n                            </label>\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"receiverUsername\"\r\n                                className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                                value={receiverUsername}\r\n                                onChange={(e) => setReceiverUsername(e.target.value)}\r\n                                required\r\n                            />\r\n                        </div>\r\n                        <div className=\"mb-4\">\r\n                            <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"sendAmount\">\r\n                                Iznos:\r\n                            </label>\r\n                            <input\r\n                                type=\"number\"\r\n                                id=\"sendAmount\"\r\n                                className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                                value={sendAmount}\r\n                                onChange={(e) => setSendAmount(e.target.value)}\r\n                                step=\"any\"\r\n                                required\r\n                            />\r\n                        </div>\r\n                        <div className=\"mb-6\">\r\n                            <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"sendCurrency\">\r\n                                Kriptovaluta:\r\n                            </label>\r\n                            <select\r\n                                id=\"sendCurrency\"\r\n                                className=\"shadow border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                                value={sendCurrency}\r\n                                onChange={(e) => setSendCurrency(e.target.value)}\r\n                            >\r\n                                {/* Prikaz opcija samo za valute koje korisnik ima u novčaniku */}\r\n                                {Object.keys(wallet?.balances || {})\r\n                                    .filter(symbol => wallet.balances[symbol] > 0) // Samo valute sa balansom > 0\r\n                                    .map(symbol => (\r\n                                        <option key={symbol} value={symbol}>{symbol}</option>\r\n                                    ))}\r\n                            </select>\r\n                        </div>\r\n                        {sendError && <p className=\"text-red-500 text-xs italic mb-4\">{sendError}</p>}\r\n                        {sendSuccess && <p className=\"text-green-500 text-xs italic mb-4\">{sendSuccess}</p>}\r\n                        <button\r\n                            type=\"submit\"\r\n                            className=\"bg-indigo-600 hover:bg-indigo-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline transition duration-300\"\r\n                        >\r\n                            Pošalji\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n\r\n                <TransactionList transactions={transactions} userId={userId} />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DashboardPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}