{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\IT354 Veb Sistemi1\\\\crypto-wallet-app\\\\src\\\\components\\\\WalletOverview.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\n// Simulacija fluktuacije cena za posebnu funkcionalnost\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst simulatePriceChange = originalPrice => {\n  const changePercentage = (Math.random() - 0.5) * 0.05; // +/- 5% fluktuacije\n  return originalPrice * (1 + changePercentage);\n};\nconst WalletOverview = ({\n  wallet,\n  allCryptos\n}) => {\n  _s();\n  const [cryptoPrices, setCryptoPrices] = useState({}); // {symbol: currentPriceUSD}\n\n  useEffect(() => {\n    // Inicijalno učitavanje cena\n    const initialPrices = {};\n    allCryptos.forEach(crypto => {\n      initialPrices[crypto.symbol] = crypto.currentPriceUSD;\n    });\n    setCryptoPrices(initialPrices);\n\n    // Simulacija real-time ažuriranja cena\n    const interval = setInterval(() => {\n      setCryptoPrices(prevPrices => {\n        const newPrices = {\n          ...prevPrices\n        };\n        allCryptos.forEach(crypto => {\n          // Ažurira na osnovu *originalne* cene iz db.json da ne bi odlutale previše\n          const originalCrypto = allCryptos.find(c => c.symbol === crypto.symbol);\n          if (originalCrypto) {\n            newPrices[crypto.symbol] = simulatePriceChange(originalCrypto.currentPriceUSD);\n          }\n        });\n        return newPrices;\n      });\n    }, 5000); // Ažuriraj svakih 5 sekundi\n\n    return () => clearInterval(interval); // Čisti interval\n  }, [allCryptos]); // Ponovo pokreni ako se promeni lista kriptovaluta\n\n  const totalValueUSD = Object.keys(wallet.balances).reduce((sum, symbol) => {\n    const balance = wallet.balances[symbol];\n    const price = cryptoPrices[symbol] || 0; // Koristi simuliranu cenu\n    return sum + balance * price;\n  }, 0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wallet-overview-card\",\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"card-title\",\n      children: \"Pregled Nov\\u010Danika\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wallet-value-section\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"wallet-value-label\",\n        children: \"Ukupna vrednost:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"wallet-total-value\",\n        children: [\" \", \"$\", totalValueUSD.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"section-title\",\n      children: \"Stanje po Kriptovalutama:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"crypto-balance-list\",\n      children: [\" \", Object.keys(wallet.balances).length > 0 ? Object.keys(wallet.balances).map(symbol => {\n        const balance = wallet.balances[symbol];\n        const price = cryptoPrices[symbol] || 0;\n        const value = balance * price;\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"crypto-balance-item\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"crypto-symbol\",\n            children: [symbol, \": \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"crypto-balance\",\n              children: balance.toFixed(4)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 75\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 33\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"crypto-value\",\n            children: [\" \", \"($\", price.toFixed(2), \"/jedinica) \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"crypto-value-bold\",\n              children: [\"$\", value.toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 68\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 33\n          }, this)]\n        }, symbol, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 29\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-muted\",\n        children: \"Va\\u0161 nov\\u010Danik je prazan.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n_s(WalletOverview, \"a1MM0HB5PsiGGDlH7KHOoH7FVYQ=\");\n_c = WalletOverview;\nexport default WalletOverview;\nvar _c;\n$RefreshReg$(_c, \"WalletOverview\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","simulatePriceChange","originalPrice","changePercentage","Math","random","WalletOverview","wallet","allCryptos","_s","cryptoPrices","setCryptoPrices","initialPrices","forEach","crypto","symbol","currentPriceUSD","interval","setInterval","prevPrices","newPrices","originalCrypto","find","c","clearInterval","totalValueUSD","Object","keys","balances","reduce","sum","balance","price","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toFixed","length","map","value","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/IT354 Veb Sistemi1/crypto-wallet-app/src/components/WalletOverview.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\n// Simulacija fluktuacije cena za posebnu funkcionalnost\r\nconst simulatePriceChange = (originalPrice) => {\r\n    const changePercentage = (Math.random() - 0.5) * 0.05; // +/- 5% fluktuacije\r\n    return originalPrice * (1 + changePercentage);\r\n};\r\n\r\nconst WalletOverview = ({ wallet, allCryptos }) => {\r\n    const [cryptoPrices, setCryptoPrices] = useState({}); // {symbol: currentPriceUSD}\r\n\r\n    useEffect(() => {\r\n        // Inicijalno učitavanje cena\r\n        const initialPrices = {};\r\n        allCryptos.forEach(crypto => {\r\n            initialPrices[crypto.symbol] = crypto.currentPriceUSD;\r\n        });\r\n        setCryptoPrices(initialPrices);\r\n\r\n        // Simulacija real-time ažuriranja cena\r\n        const interval = setInterval(() => {\r\n            setCryptoPrices(prevPrices => {\r\n                const newPrices = { ...prevPrices };\r\n                allCryptos.forEach(crypto => {\r\n                    // Ažurira na osnovu *originalne* cene iz db.json da ne bi odlutale previše\r\n                    const originalCrypto = allCryptos.find(c => c.symbol === crypto.symbol);\r\n                    if (originalCrypto) {\r\n                        newPrices[crypto.symbol] = simulatePriceChange(originalCrypto.currentPriceUSD);\r\n                    }\r\n                });\r\n                return newPrices;\r\n            });\r\n        }, 5000); // Ažuriraj svakih 5 sekundi\r\n\r\n        return () => clearInterval(interval); // Čisti interval\r\n    }, [allCryptos]); // Ponovo pokreni ako se promeni lista kriptovaluta\r\n\r\n    const totalValueUSD = Object.keys(wallet.balances).reduce((sum, symbol) => {\r\n        const balance = wallet.balances[symbol];\r\n        const price = cryptoPrices[symbol] || 0; // Koristi simuliranu cenu\r\n        return sum + (balance * price);\r\n    }, 0);\r\n\r\n    return (\r\n        <div className=\"wallet-overview-card\"> {/* Izmenjeno */}\r\n            <h2 className=\"card-title\">Pregled Novčanika</h2> {/* Izmenjeno */}\r\n            <div className=\"wallet-value-section\"> {/* Izmenjeno */}\r\n                <p className=\"wallet-value-label\">Ukupna vrednost:</p> {/* Izmenjeno */}\r\n                <p className=\"wallet-total-value\"> {/* Izmenjeno */}\r\n                    ${totalValueUSD.toFixed(2)}\r\n                </p>\r\n            </div>\r\n            <h3 className=\"section-title\">Stanje po Kriptovalutama:</h3> {/* Izmenjeno */}\r\n            <ul className=\"crypto-balance-list\"> {/* Izmenjeno */}\r\n                {Object.keys(wallet.balances).length > 0 ? (\r\n                    Object.keys(wallet.balances).map(symbol => {\r\n                        const balance = wallet.balances[symbol];\r\n                        const price = cryptoPrices[symbol] || 0;\r\n                        const value = balance * price;\r\n                        return (\r\n                            <li key={symbol} className=\"crypto-balance-item\"> {/* Izmenjeno */}\r\n                                <span className=\"crypto-symbol\">{symbol}: <span className=\"crypto-balance\">{balance.toFixed(4)}</span></span> {/* Izmenjeno */}\r\n                                <span className=\"crypto-value\"> {/* Izmenjeno */}\r\n                                    (${price.toFixed(2)}/jedinica) <span className=\"crypto-value-bold\">${value.toFixed(2)}</span> {/* Izmenjeno */}\r\n                                </span>\r\n                            </li>\r\n                        );\r\n                    })\r\n                ) : (\r\n                    <p className=\"text-muted\">Vaš novčanik je prazan.</p>\r\n                )}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default WalletOverview;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}