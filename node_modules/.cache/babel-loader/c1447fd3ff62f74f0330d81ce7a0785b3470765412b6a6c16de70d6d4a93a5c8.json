{"ast":null,"code":"import _objectSpread from\"C:/Users/HP/Desktop/IT354 Veb Sistemi1/crypto-wallet-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useEffect,useState}from'react';import axios from'axios';import{useAuth}from'../context/AuthContext';import WalletOverview from'../components/WalletOverview';import TransactionList from'../components/TransactionList';import PortfolioChart from'../components/PortfolioChart';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const DashboardPage=()=>{const{userId}=useAuth();const[wallet,setWallet]=useState(null);const[transactions,setTransactions]=useState([]);const[allCryptos,setAllCryptos]=useState([]);// Za cene i simbole\nconst[loading,setLoading]=useState(true);const[sendAmount,setSendAmount]=useState('');const[sendCurrency,setSendCurrency]=useState('BTC');const[receiverUsername,setReceiverUsername]=useState('');const[sendError,setSendError]=useState('');const[sendSuccess,setSendSuccess]=useState('');useEffect(()=>{const fetchData=async()=>{if(!userId){setLoading(false);// Prestani sa učitavanjem ako nema korisnika\nreturn;}setLoading(true);try{// Učitaj novčanik korisnika\nconst walletRes=await axios.get(\"http://localhost:5000/wallets?userId=\".concat(userId));if(walletRes.data.length>0){setWallet(walletRes.data[0]);}else{// Ovo bi trebalo da se desi pri registraciji, ali kao fallback\nconst newWallet={userId,balances:{}};const createdWallet=await axios.post('http://localhost:5000/wallets',newWallet);setWallet(createdWallet.data);}// Učitaj transakcije za korisnika (kao pošiljaoca ili primaoca)\nconst txRes=await axios.get(\"http://localhost:5000/transactions?senderId=\".concat(userId));const receivedTxRes=await axios.get(\"http://localhost:5000/transactions?receiverId=\".concat(userId));// Sortiraj sve transakcije po datumu (najnovije prvo)\nconst allUserTxs=[...txRes.data,...receivedTxRes.data].sort((a,b)=>new Date(b.date)-new Date(a.date));setTransactions(allUserTxs);// Učitaj sve podržane kriptovalute\nconst cryptoRes=await axios.get('http://localhost:5000/cryptos');setAllCryptos(cryptoRes.data);// Postavi default valutu za slanje ako korisnik ima neke balanse\nif(walletRes.data.length>0&&Object.keys(walletRes.data[0].balances).length>0){setSendCurrency(Object.keys(walletRes.data[0].balances)[0]);}}catch(error){console.error(\"Greška pri učitavanju podataka:\",error);}finally{setLoading(false);}};fetchData();},[userId]);const handleSendCrypto=async e=>{e.preventDefault();setSendError('');setSendSuccess('');const amount=parseFloat(sendAmount);if(isNaN(amount)||amount<=0){setSendError('Unesite validan iznos.');return;}if(!wallet||!wallet.balances[sendCurrency]||wallet.balances[sendCurrency]<amount){setSendError(\"Nedovoljno sredstava za \".concat(sendCurrency,\". Trenutno imate: \").concat((wallet===null||wallet===void 0?void 0:wallet.balances[sendCurrency])||0,\" \").concat(sendCurrency));return;}// Zabraniti slanje samom sebi\nconst senderUsername=(await axios.get(\"http://localhost:5000/users/\".concat(userId))).data.username;if(receiverUsername===senderUsername){setSendError('Ne možete slati kriptovalute samom sebi.');return;}try{// Pronađi primaoca po username-u\nconst receiverRes=await axios.get(\"http://localhost:5000/users?username=\".concat(receiverUsername));if(receiverRes.data.length===0){setSendError('Primalac sa unetim korisničkim imenom ne postoji.');return;}const receiverUser=receiverRes.data[0];const receiverUserId=receiverUser.id;// Pronađi novčanik primaoca\nlet receiverWalletRes=await axios.get(\"http://localhost:5000/wallets?userId=\".concat(receiverUserId));let receiverWallet=receiverWalletRes.data[0];if(!receiverWallet){// Kreiraj novčanik za primaoca ako ne postoji\nreceiverWallet={userId:receiverUserId,balances:{}};receiverWallet=(await axios.post('http://localhost:5000/wallets',receiverWallet)).data;}// Ažuriraj stanje pošiljaoca\nconst updatedSenderBalances=_objectSpread({},wallet.balances);updatedSenderBalances[sendCurrency]-=amount;// Ažuriraj stanje primaoca\nconst updatedReceiverBalances=_objectSpread({},receiverWallet.balances);updatedReceiverBalances[sendCurrency]=(updatedReceiverBalances[sendCurrency]||0)+amount;// Transakcija pošiljaoca (PATCH jer menjamo postojeći novčanik)\nawait axios.patch(\"http://localhost:5000/wallets/\".concat(wallet.id),{balances:updatedSenderBalances});// Transakcija primaoca (PATCH jer menjamo postojeći novčanik)\nawait axios.patch(\"http://localhost:5000/wallets/\".concat(receiverWallet.id),{balances:updatedReceiverBalances});// Kreiraj transakciju\nconst newTransaction={id:\"tx\".concat(Date.now()),// Jedinstveni ID za transakciju\nsenderId:userId,receiverId:receiverUserId,amount:amount,currency:sendCurrency,date:new Date().toISOString(),type:'send'};await axios.post('http://localhost:5000/transactions',newTransaction);setSendSuccess('Kriptovaluta uspešno poslata!');setSendAmount('');setReceiverUsername('');// Ažuriraj lokalno stanje novčanika\nsetWallet(prevWallet=>_objectSpread(_objectSpread({},prevWallet),{},{balances:updatedSenderBalances}));// Ponovo dohvati transakcije za svež prikaz\nconst txRes=await axios.get(\"http://localhost:5000/transactions?senderId=\".concat(userId));const receivedTxRes=await axios.get(\"http://localhost:5000/transactions?receiverId=\".concat(userId));const allUserTxs=[...txRes.data,...receivedTxRes.data].sort((a,b)=>new Date(b.date)-new Date(a.date));setTransactions(allUserTxs);}catch(error){console.error(\"Greška pri slanju kriptovalute:\",error);setSendError('Došlo je do greške prilikom slanja. Proverite da li primalac postoji i imate li dovoljno sredstava.');}};if(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"text-center text-lg mt-8\",children:\"U\\u010Ditavanje...\"});}// Proveri da li je wallet null ili prazan nakon učitavanja\nif(!wallet||Object.keys(wallet.balances).length===0){return/*#__PURE__*/_jsxs(\"div\",{className:\"py-8 text-center\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-4xl font-bold text-gray-900 mb-8\",children:\"Moj Dashboard\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-xl text-gray-700\",children:\"Va\\u0161 nov\\u010Danik je trenutno prazan. Ne mo\\u017Eete slati kriptovalute dok ne dobijete neku.\"})]});}return/*#__PURE__*/_jsxs(\"div\",{className:\"py-8\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-4xl font-bold text-gray-900 mb-8 text-center\",children:\"Moj Dashboard\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 gap-8 mb-8\",children:[wallet&&/*#__PURE__*/_jsx(WalletOverview,{wallet:wallet,allCryptos:allCryptos}),wallet&&/*#__PURE__*/_jsx(PortfolioChart,{wallet:wallet,allCryptos:allCryptos})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 gap-8\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white p-6 rounded-lg shadow-xl\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-2xl font-semibold mb-4\",children:\"Po\\u0161alji Kriptovalutu\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSendCrypto,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-gray-700 text-sm font-bold mb-2\",htmlFor:\"receiverUsername\",children:\"Korisni\\u010Dko ime primaoca:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"receiverUsername\",className:\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",value:receiverUsername,onChange:e=>setReceiverUsername(e.target.value),required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-gray-700 text-sm font-bold mb-2\",htmlFor:\"sendAmount\",children:\"Iznos:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",id:\"sendAmount\",className:\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",value:sendAmount,onChange:e=>setSendAmount(e.target.value),step:\"any\",required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-6\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-gray-700 text-sm font-bold mb-2\",htmlFor:\"sendCurrency\",children:\"Kriptovaluta:\"}),/*#__PURE__*/_jsx(\"select\",{id:\"sendCurrency\",className:\"shadow border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",value:sendCurrency,onChange:e=>setSendCurrency(e.target.value),children:Object.keys((wallet===null||wallet===void 0?void 0:wallet.balances)||{}).filter(symbol=>wallet.balances[symbol]>0)// Samo valute sa balansom > 0\n.map(symbol=>/*#__PURE__*/_jsx(\"option\",{value:symbol,children:symbol},symbol))})]}),sendError&&/*#__PURE__*/_jsx(\"p\",{className:\"text-red-500 text-xs italic mb-4\",children:sendError}),sendSuccess&&/*#__PURE__*/_jsx(\"p\",{className:\"text-green-500 text-xs italic mb-4\",children:sendSuccess}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"bg-indigo-600 hover:bg-indigo-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline transition duration-300\",children:\"Po\\u0161alji\"})]})]}),/*#__PURE__*/_jsx(TransactionList,{transactions:transactions,userId:userId})]})]});};export default DashboardPage;","map":{"version":3,"names":["React","useEffect","useState","axios","useAuth","WalletOverview","TransactionList","PortfolioChart","jsx","_jsx","jsxs","_jsxs","DashboardPage","userId","wallet","setWallet","transactions","setTransactions","allCryptos","setAllCryptos","loading","setLoading","sendAmount","setSendAmount","sendCurrency","setSendCurrency","receiverUsername","setReceiverUsername","sendError","setSendError","sendSuccess","setSendSuccess","fetchData","walletRes","get","concat","data","length","newWallet","balances","createdWallet","post","txRes","receivedTxRes","allUserTxs","sort","a","b","Date","date","cryptoRes","Object","keys","error","console","handleSendCrypto","e","preventDefault","amount","parseFloat","isNaN","senderUsername","username","receiverRes","receiverUser","receiverUserId","id","receiverWalletRes","receiverWallet","updatedSenderBalances","_objectSpread","updatedReceiverBalances","patch","newTransaction","now","senderId","receiverId","currency","toISOString","type","prevWallet","className","children","onSubmit","htmlFor","value","onChange","target","required","step","filter","symbol","map"],"sources":["C:/Users/HP/Desktop/IT354 Veb Sistemi1/crypto-wallet-app/src/pages/DashboardPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useAuth } from '../context/AuthContext';\r\nimport WalletOverview from '../components/WalletOverview';\r\nimport TransactionList from '../components/TransactionList';\r\nimport PortfolioChart from '../components/PortfolioChart';\r\n\r\nconst DashboardPage = () => {\r\n    const { userId } = useAuth();\r\n    const [wallet, setWallet] = useState(null);\r\n    const [transactions, setTransactions] = useState([]);\r\n    const [allCryptos, setAllCryptos] = useState([]); // Za cene i simbole\r\n    const [loading, setLoading] = useState(true);\r\n    const [sendAmount, setSendAmount] = useState('');\r\n    const [sendCurrency, setSendCurrency] = useState('BTC');\r\n    const [receiverUsername, setReceiverUsername] = useState('');\r\n    const [sendError, setSendError] = useState('');\r\n    const [sendSuccess, setSendSuccess] = useState('');\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            if (!userId) {\r\n                setLoading(false); // Prestani sa učitavanjem ako nema korisnika\r\n                return;\r\n            }\r\n\r\n            setLoading(true);\r\n            try {\r\n                // Učitaj novčanik korisnika\r\n                const walletRes = await axios.get(`http://localhost:5000/wallets?userId=${userId}`);\r\n                if (walletRes.data.length > 0) {\r\n                    setWallet(walletRes.data[0]);\r\n                } else {\r\n                    // Ovo bi trebalo da se desi pri registraciji, ali kao fallback\r\n                    const newWallet = { userId, balances: {} };\r\n                    const createdWallet = await axios.post('http://localhost:5000/wallets', newWallet);\r\n                    setWallet(createdWallet.data);\r\n                }\r\n\r\n                // Učitaj transakcije za korisnika (kao pošiljaoca ili primaoca)\r\n                const txRes = await axios.get(`http://localhost:5000/transactions?senderId=${userId}`);\r\n                const receivedTxRes = await axios.get(`http://localhost:5000/transactions?receiverId=${userId}`);\r\n\r\n                // Sortiraj sve transakcije po datumu (najnovije prvo)\r\n                const allUserTxs = [...txRes.data, ...receivedTxRes.data].sort((a, b) => new Date(b.date) - new Date(a.date));\r\n                setTransactions(allUserTxs);\r\n\r\n                // Učitaj sve podržane kriptovalute\r\n                const cryptoRes = await axios.get('http://localhost:5000/cryptos');\r\n                setAllCryptos(cryptoRes.data);\r\n\r\n                // Postavi default valutu za slanje ako korisnik ima neke balanse\r\n                if (walletRes.data.length > 0 && Object.keys(walletRes.data[0].balances).length > 0) {\r\n                    setSendCurrency(Object.keys(walletRes.data[0].balances)[0]);\r\n                }\r\n\r\n            } catch (error) {\r\n                console.error(\"Greška pri učitavanju podataka:\", error);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, [userId]);\r\n\r\n    const handleSendCrypto = async (e) => {\r\n        e.preventDefault();\r\n        setSendError('');\r\n        setSendSuccess('');\r\n\r\n        const amount = parseFloat(sendAmount);\r\n        if (isNaN(amount) || amount <= 0) {\r\n            setSendError('Unesite validan iznos.');\r\n            return;\r\n        }\r\n\r\n        if (!wallet || !wallet.balances[sendCurrency] || wallet.balances[sendCurrency] < amount) {\r\n            setSendError(`Nedovoljno sredstava za ${sendCurrency}. Trenutno imate: ${wallet?.balances[sendCurrency] || 0} ${sendCurrency}`);\r\n            return;\r\n        }\r\n\r\n        // Zabraniti slanje samom sebi\r\n        const senderUsername = (await axios.get(`http://localhost:5000/users/${userId}`)).data.username;\r\n        if (receiverUsername === senderUsername) {\r\n            setSendError('Ne možete slati kriptovalute samom sebi.');\r\n            return;\r\n        }\r\n\r\n\r\n        try {\r\n            // Pronađi primaoca po username-u\r\n            const receiverRes = await axios.get(`http://localhost:5000/users?username=${receiverUsername}`);\r\n            if (receiverRes.data.length === 0) {\r\n                setSendError('Primalac sa unetim korisničkim imenom ne postoji.');\r\n                return;\r\n            }\r\n            const receiverUser = receiverRes.data[0];\r\n            const receiverUserId = receiverUser.id;\r\n\r\n            // Pronađi novčanik primaoca\r\n            let receiverWalletRes = await axios.get(`http://localhost:5000/wallets?userId=${receiverUserId}`);\r\n            let receiverWallet = receiverWalletRes.data[0];\r\n\r\n            if (!receiverWallet) {\r\n                // Kreiraj novčanik za primaoca ako ne postoji\r\n                receiverWallet = { userId: receiverUserId, balances: {} };\r\n                receiverWallet = (await axios.post('http://localhost:5000/wallets', receiverWallet)).data;\r\n            }\r\n\r\n            // Ažuriraj stanje pošiljaoca\r\n            const updatedSenderBalances = { ...wallet.balances };\r\n            updatedSenderBalances[sendCurrency] -= amount;\r\n\r\n            // Ažuriraj stanje primaoca\r\n            const updatedReceiverBalances = { ...receiverWallet.balances };\r\n            updatedReceiverBalances[sendCurrency] = (updatedReceiverBalances[sendCurrency] || 0) + amount;\r\n\r\n            // Transakcija pošiljaoca (PATCH jer menjamo postojeći novčanik)\r\n            await axios.patch(`http://localhost:5000/wallets/${wallet.id}`, { balances: updatedSenderBalances });\r\n\r\n            // Transakcija primaoca (PATCH jer menjamo postojeći novčanik)\r\n            await axios.patch(`http://localhost:5000/wallets/${receiverWallet.id}`, { balances: updatedReceiverBalances });\r\n\r\n            // Kreiraj transakciju\r\n            const newTransaction = {\r\n                id: `tx${Date.now()}`, // Jedinstveni ID za transakciju\r\n                senderId: userId,\r\n                receiverId: receiverUserId,\r\n                amount: amount,\r\n                currency: sendCurrency,\r\n                date: new Date().toISOString(),\r\n                type: 'send'\r\n            };\r\n            await axios.post('http://localhost:5000/transactions', newTransaction);\r\n\r\n            setSendSuccess('Kriptovaluta uspešno poslata!');\r\n            setSendAmount('');\r\n            setReceiverUsername('');\r\n\r\n            // Ažuriraj lokalno stanje novčanika\r\n            setWallet(prevWallet => ({ ...prevWallet, balances: updatedSenderBalances }));\r\n\r\n            // Ponovo dohvati transakcije za svež prikaz\r\n            const txRes = await axios.get(`http://localhost:5000/transactions?senderId=${userId}`);\r\n            const receivedTxRes = await axios.get(`http://localhost:5000/transactions?receiverId=${userId}`);\r\n            const allUserTxs = [...txRes.data, ...receivedTxRes.data].sort((a, b) => new Date(b.date) - new Date(a.date));\r\n            setTransactions(allUserTxs);\r\n\r\n        } catch (error) {\r\n            console.error(\"Greška pri slanju kriptovalute:\", error);\r\n            setSendError('Došlo je do greške prilikom slanja. Proverite da li primalac postoji i imate li dovoljno sredstava.');\r\n        }\r\n    };\r\n\r\n    if (loading) {\r\n        return <div className=\"text-center text-lg mt-8\">Učitavanje...</div>;\r\n    }\r\n\r\n    // Proveri da li je wallet null ili prazan nakon učitavanja\r\n    if (!wallet || Object.keys(wallet.balances).length === 0) {\r\n        return (\r\n            <div className=\"py-8 text-center\">\r\n                <h1 className=\"text-4xl font-bold text-gray-900 mb-8\">Moj Dashboard</h1>\r\n                <p className=\"text-xl text-gray-700\">Vaš novčanik je trenutno prazan. Ne možete slati kriptovalute dok ne dobijete neku.</p>\r\n                {/* Uklonjen je ceo problematični div blok za simulaciju primanja sredstava */}\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"py-8\">\r\n            <h1 className=\"text-4xl font-bold text-gray-900 mb-8 text-center\">Moj Dashboard</h1>\r\n\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8 mb-8\">\r\n                {wallet && <WalletOverview wallet={wallet} allCryptos={allCryptos} />}\r\n                {wallet && <PortfolioChart wallet={wallet} allCryptos={allCryptos} />}\r\n            </div>\r\n\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\r\n                {/* Forma za slanje kriptovaluta */}\r\n                <div className=\"bg-white p-6 rounded-lg shadow-xl\">\r\n                    <h3 className=\"text-2xl font-semibold mb-4\">Pošalji Kriptovalutu</h3>\r\n                    <form onSubmit={handleSendCrypto}>\r\n                        <div className=\"mb-4\">\r\n                            <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"receiverUsername\">\r\n                                Korisničko ime primaoca:\r\n                            </label>\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"receiverUsername\"\r\n                                className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                                value={receiverUsername}\r\n                                onChange={(e) => setReceiverUsername(e.target.value)}\r\n                                required\r\n                            />\r\n                        </div>\r\n                        <div className=\"mb-4\">\r\n                            <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"sendAmount\">\r\n                                Iznos:\r\n                            </label>\r\n                            <input\r\n                                type=\"number\"\r\n                                id=\"sendAmount\"\r\n                                className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                                value={sendAmount}\r\n                                onChange={(e) => setSendAmount(e.target.value)}\r\n                                step=\"any\"\r\n                                required\r\n                            />\r\n                        </div>\r\n                        <div className=\"mb-6\">\r\n                            <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"sendCurrency\">\r\n                                Kriptovaluta:\r\n                            </label>\r\n                            <select\r\n                                id=\"sendCurrency\"\r\n                                className=\"shadow border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                                value={sendCurrency}\r\n                                onChange={(e) => setSendCurrency(e.target.value)}\r\n                            >\r\n                                {/* Prikaz opcija samo za valute koje korisnik ima u novčaniku */}\r\n                                {Object.keys(wallet?.balances || {})\r\n                                    .filter(symbol => wallet.balances[symbol] > 0) // Samo valute sa balansom > 0\r\n                                    .map(symbol => (\r\n                                        <option key={symbol} value={symbol}>{symbol}</option>\r\n                                    ))}\r\n                            </select>\r\n                        </div>\r\n                        {sendError && <p className=\"text-red-500 text-xs italic mb-4\">{sendError}</p>}\r\n                        {sendSuccess && <p className=\"text-green-500 text-xs italic mb-4\">{sendSuccess}</p>}\r\n                        <button\r\n                            type=\"submit\"\r\n                            className=\"bg-indigo-600 hover:bg-indigo-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline transition duration-300\"\r\n                        >\r\n                            Pošalji\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n\r\n                <TransactionList transactions={transactions} userId={userId} />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DashboardPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}